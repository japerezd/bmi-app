{"version":3,"sources":["DataContext.js","types/types.js","reducers/bmiReducer.js","data/weightRanges.js","components/results/ResultBmi.js","helpers/getRange.js","helpers/healthyWeight.js","helpers/bmiEnglish.js","hooks/useForm.js","components/ui/SystemsNavbar.js","components/systems/English.js","helpers/bmiMetric.js","components/systems/Metric.js","routers/AppRouter.js","BMIApp.js","index.js"],"names":["DataContext","createContext","types","metric","english","initialState","meters","kilograms","bmiReducer","state","action","type","calculate","payload","symbol","underWeight","name","range","text","normalWeight","overWeight","obese","ResultBmi","isMetricOrEnglish","useContext","data","bmi","height","getRange","minBmi","maxBmi","min","Math","round","max","healthyWeightMetric","healthyWeightEnglish","getMinMax","className","to","style","color","src","process","alt","bmiEnglish","feet","inches","pounds","heightToInches","parseInt","result","getHeightToInches","useForm","useState","values","setValues","reset","handleInputChange","target","value","SystemsNavbar","activeClassName","exact","English","history","formValues","dispatch","onSubmit","e","preventDefault","push","placeholder","onChange","disabled","bmiMetric","Metric","AppRouter","path","component","BMIApp","useReducer","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d9a659d.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\n\r\nexport const DataContext = createContext();","\r\n\r\nexport const types = {\r\n   metric: '[BMI] metric system',\r\n   english: '[BMI] english system'\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    meters: null,\r\n    kilograms: null\r\n}\r\n\r\nexport const bmiReducer = (state = {initialState} , action) => {\r\n\r\n    switch (action.type) {\r\n        case types.calculate:\r\n            return {\r\n                ...action.payload\r\n            }\r\n\r\n        case types.metric:\r\n            return {\r\n                symbol: 'kg',\r\n                ...action.payload\r\n            }\r\n\r\n        case types.english:\r\n            return {\r\n                symbol: 'lb',\r\n                ...action.payload\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nexport const underWeight = {\r\n    name: 'bajo-peso.png',\r\n    range: 'underweight',\r\n    text: 'You have to do more exercise to gain some weight and be healthy, also have a good diet plan for your objective.'\r\n}\r\n\r\nexport const normalWeight = {\r\n    name: 'normal-peso.png',\r\n    range: 'healthy',\r\n    text: 'You are in good place now. Keep up your healthy habits to maintain your weight.'\r\n}\r\n\r\nexport const overWeight = {\r\n    name: 'sobrepeso-peso.png',\r\n    range: 'overweight',\r\n    text: 'We recommend you to stay away from bad carbohydrates, and to do moderate exercise. If you gain more weight in the future you will have health problems.'\r\n}\r\n\r\nexport const obese = {\r\n    name: 'obesidad-peso.png',\r\n    range: 'obese',\r\n    text: 'At this point you probably have health problems and it can be worse if you dont pay attention to your alimentation. Do exercise and eat healthy food (stay away from fast food).'\r\n}","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { DataContext } from '../../DataContext'\r\nimport { getRange } from '../../helpers/getRange';\r\nimport { healthyWeightEnglish, healthyWeightMetric } from '../../helpers/healthyWeight';\r\n\r\nexport const ResultBmi = () => {\r\n    // min bmi and max bmi for healthy persons\r\n    const minHealthy = 18.5;\r\n    const maxHealthy = 24.9;\r\n\r\n    const isMetricOrEnglish = () => {\r\n        if(symbol === 'kg')\r\n            return 'metric';\r\n\r\n        return 'english';\r\n    }\r\n\r\n    const {data: {symbol, bmi, height}} = useContext(DataContext);\r\n\r\n    const {name, range, text} = getRange(bmi);\r\n\r\n    const getMinMax = () => {\r\n        if(isMetricOrEnglish() === 'metric'){\r\n           const {min, max} = healthyWeightMetric(height, minHealthy, maxHealthy);\r\n           return {min, max};\r\n        }else{\r\n            const {min, max} = healthyWeightEnglish(height, minHealthy, maxHealthy);\r\n            return {min, max};\r\n        }\r\n    }\r\n\r\n    const {min, max} = getMinMax();\r\n\r\n    const link = () => {\r\n        if(isMetricOrEnglish() === 'metric')\r\n            return '/metric';\r\n        \r\n        return '/english';\r\n    }\r\n\r\n    return (\r\n        <div className=\"result-container animate__animated animate__slideInDown\">\r\n            <div className=\"container__header\">\r\n                 Result\r\n            </div>\r\n\r\n            <Link to={link} className=\"link\" style={{color: 'blue'}}>\r\n                <h4>Calculate again</h4>\r\n            </Link>\r\n\r\n            <div className=\"result\">\r\n                <h3>YOUR BMI</h3>                    \r\n                <span className=\"result-bmi\">{bmi}</span>\r\n            </div>\r\n\r\n            <img src={`${process.env.PUBLIC_URL}/assets/images/${name}`} className=\"person-weight\" alt={name}/>\r\n\r\n            <div className=\"range-description\">\r\n                <b>{ range }</b>\r\n            </div>\r\n\r\n            <div className=\"result-text\">\r\n                <p>{text}</p>\r\n                <p><strong>The healthy range for BMI is between 18.5 and 24.9</strong></p>\r\n            </div>\r\n            \r\n            <span className=\"directive-text\">A healthy weight for someone your height would be</span>\r\n            <span className=\"directive-range\">{min} - {max} <span className=\"weight\">{symbol}</span> </span>\r\n        </div>\r\n    )\r\n}\r\n","import { normalWeight, obese, overWeight, underWeight } from \"../data/weightRanges\"\r\n\r\nexport const getRange = (bmi) => {\r\n    if(bmi < 18.5) return underWeight;\r\n    if(bmi >= 18.5 && bmi <=24.9) return normalWeight;\r\n    if(bmi >= 25 && bmi <= 29.9) return overWeight;\r\n    if(bmi >= 30) return obese;\r\n}","\r\n\r\nexport const healthyWeightMetric = (height, minBmi, maxBmi) => {\r\n\r\n    const min = Math.round(height * height * minBmi * 10) / 10;\r\n    const max = Math.round(height * height * maxBmi * 10) / 10;\r\n    return {\r\n        min, max\r\n    }\r\n}\r\n\r\nexport const healthyWeightEnglish = (height, minBmi, maxBmi) => {\r\n    const min = Math.round(Math.round(height * height / 703 * minBmi * 10) / 10);\r\n    const max = Math.round(Math.round(height * height / 703 * maxBmi * 10) / 10);\r\n    return {min, max}\r\n}","\r\n\r\nexport const bmiEnglish = (feet,inches, pounds) => {\r\n\r\n    const heightToInches = (feet * 12) + parseInt(inches);\r\n    const newInchesSquare = heightToInches * heightToInches;\r\n    const result = (pounds / newInchesSquare) * 703;\r\n    return Math.round(result * 10) / 10;\r\n}\r\n\r\nexport const getHeightToInches = (feet, inches) => {\r\n    return (feet * 12) + parseInt(inches);\r\n}","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name] : target.value\r\n        })\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n","import React from 'react';\r\nimport {  NavLink } from 'react-router-dom';\r\n\r\nexport const SystemsNavbar = () => {\r\n    return (\r\n        <div className=\"systems\">\r\n            <NavLink\r\n                activeClassName=\"active\"\r\n                className=\"link\"\r\n                exact\r\n                to=\"/english\"\r\n            > \r\n                English System\r\n            </NavLink>\r\n            \r\n            <label>|</label>\r\n            <NavLink\r\n                activeClassName=\"active\"\r\n                className=\"link\"\r\n                exact\r\n                to=\"/metric\"\r\n            >\r\n                Metric System\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { DataContext } from '../../DataContext';\r\nimport { bmiEnglish, getHeightToInches } from '../../helpers/bmiEnglish';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { types } from '../../types/types';\r\nimport { SystemsNavbar } from '../ui/SystemsNavbar';\r\n\r\nexport const English = ({history}) => {\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        feet:'',\r\n        inches: '',\r\n        pounds: ''\r\n    });\r\n\r\n    const {dispatch} = useContext(DataContext);\r\n\r\n    const {feet, inches, pounds} = formValues;\r\n\r\n    const handleCalculate = e => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: types.english,\r\n            payload: {\r\n                height: getHeightToInches(feet, inches),\r\n                bmi: bmiEnglish(feet, inches, pounds)\r\n            }\r\n        });\r\n\r\n        history.push('/result');\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"container animate__animated animate__fadeIn\">\r\n            <div className=\"container__header\">\r\n                BMI Calculator for adults\r\n            </div>\r\n\r\n        <div className=\"english-system\">    \r\n        <SystemsNavbar/>\r\n        \r\n        <form\r\n            onSubmit={handleCalculate}\r\n        >\r\n\r\n            <div className=\"english-system__height \">\r\n                <label><strong>Height: </strong></label>\r\n                <div>\r\n                    <input \r\n                        type=\"number\" \r\n                        placeholder=\"5\"\r\n                        name=\"feet\"\r\n                        value={feet}\r\n                        onChange={handleInputChange}\r\n                    /> \r\n                    <label className=\"measurements\"> feet</label>\r\n                    \r\n                    <input \r\n                        type=\"number\" \r\n                        placeholder=\"9\"\r\n                        name=\"inches\"\r\n                        value={inches}\r\n                        onChange={handleInputChange}\r\n                    /> \r\n                    <label className=\"measurements\"> inches</label>\r\n                </div>\r\n            </div>\r\n        \r\n            <div className=\"english-system__weight\">\r\n                <label><strong>Weight: </strong></label>\r\n                <div>\r\n                    <input \r\n                        type=\"number\" \r\n                        placeholder=\"155\"\r\n                        name=\"pounds\"\r\n                        value={pounds}\r\n                        onChange={handleInputChange}\r\n                    /> \r\n                    <label className=\"measurements\"> pounds</label>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                feet ==='' || inches === '' || pounds === '' \r\n                ?\r\n                    <button className=\"btn btn-block btn-primary\" type=\"submit\" disabled>\r\n                        Calculate\r\n                    </button>\r\n                :\r\n                <button className=\"btn btn-block btn-primary\" type=\"submit\">\r\n                        Calculate\r\n                </button>\r\n            }\r\n        </form>\r\n    </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n","\r\n\r\nexport const bmiMetric = (meters, kilograms) => {\r\n    const result = kilograms / (meters * meters);\r\n    return  Math.round(result * 10) / 10;\r\n}","import React, {useContext} from 'react';\r\nimport { DataContext } from '../../DataContext';\r\nimport { bmiMetric } from '../../helpers/bmiMetric';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { types } from '../../types/types';\r\nimport { SystemsNavbar } from '../ui/SystemsNavbar';\r\n\r\nexport const Metric = ({history}) => {\r\n    const {dispatch} = useContext(DataContext);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        meters: '',\r\n        kilograms: ''\r\n    });\r\n\r\n\r\n    const {meters, kilograms} = formValues;\r\n\r\n    const handleCalculate = e => {\r\n        e.preventDefault();\r\n\r\n        dispatch({\r\n            type: types.metric,\r\n            payload: {\r\n                height: meters,\r\n                bmi: bmiMetric(meters, kilograms)\r\n            }\r\n        });\r\n\r\n        history.push('/result');\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"container animate__animated animate__fadeIn\">\r\n            <div className=\"container__header\">\r\n                BMI Calculator for adults\r\n            </div>\r\n            <div className=\"metric-system\">\r\n        <SystemsNavbar/>\r\n\r\n            <form\r\n                onSubmit={handleCalculate}\r\n            >\r\n                <div className=\"metric-system__height\">\r\n                    <label><strong>Height: </strong></label>\r\n                    <div>\r\n                    <input type=\"number\" placeholder=\"1.70\" name=\"meters\" value={meters}\r\n                        onChange={handleInputChange}\r\n                    /> \r\n                    <label className=\"measurements\"> meters</label>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"metric-system__weight\">\r\n                    <label><strong>Weight: </strong></label>\r\n                    <div>\r\n                        <input type=\"number\" placeholder=\"75\" name=\"kilograms\" value={kilograms}\r\n                            onChange={handleInputChange}\r\n                        /> \r\n                        <label className=\"measurements\"> kilograms</label>\r\n                    </div>\r\n                </div>\r\n\r\n            {\r\n                meters ==='' || kilograms === '' \r\n                ?\r\n                    <button className=\"btn btn-block btn-primary\" type=\"submit\" disabled>\r\n                        Calculate\r\n                    </button>\r\n                :\r\n                <button className=\"btn btn-block btn-primary\" type=\"submit\">\r\n                        Calculate\r\n                </button>\r\n            }\r\n            \r\n            </form>\r\n        </div>\r\n        </div>\r\n        \r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { ResultBmi } from '../components/results/ResultBmi';\r\nimport { English } from '../components/systems/English';\r\nimport { Metric } from '../components/systems/Metric';\r\n  \r\n  export const AppRouter = () =>  {\r\n    return (\r\n      <Router>\r\n        {/* <SystemsNavbar/> */}\r\n        \r\n        <div>\r\n       \r\n          <Switch>\r\n                <Route exact path=\"/metric\" component={Metric}/>\r\n                <Route exact path=\"/english\" component={English}/>\r\n                <Route exact path=\"/result\" component={ResultBmi} />\r\n                \r\n                <Redirect to=\"/metric\"/> \r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n      \r\n    );\r\n  }\r\n  \r\n","import React, { useEffect, useReducer } from 'react';\r\nimport { DataContext } from './DataContext';\r\nimport { bmiReducer } from './reducers/bmiReducer';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\n\r\nexport const BMIApp = () => {\r\n    \r\n    const init = () => {\r\n        return JSON.parse(localStorage.getItem('bmi')) || {meters:null, kilograms:null}\r\n    }\r\n    const [data, dispatch] = useReducer(bmiReducer, {}, init);\r\n\r\n    useEffect(() => {\r\n       localStorage.setItem('bmi', JSON.stringify(data))\r\n    }, [data])\r\n\r\n    return (\r\n        <>\r\n        <DataContext.Provider value={ {data, dispatch} }>\r\n            <AppRouter/>\r\n        </DataContext.Provider>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BMIApp } from './BMIApp';\nimport './index.css';\n\nReactDOM.render(\n    <BMIApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}